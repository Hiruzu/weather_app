name: CI/CD for Weather App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          
      - name: Stop any running containers
        run: docker stop $(docker ps -aq) || true

      - name: Remove any existing containers
        run: docker rm $(docker ps -aq) || true

      - name: Remove any existing networks
        run: docker network prune -f
      
      - name: Start Flask API
        run: |
          nohup python backend.py > flask.log 2>&1 &
          sleep 5  # Attendre que le serveur démarre

      - name: Check if Flask is running
        run: curl -I http://localhost:5000 || (cat flask.log && exit 1)
        
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker containers
        run: |
          docker-compose up -d
          sleep 10  # Attendre que Flask démarre complètement

      - name: Run tests
        run: pytest test/test_unit.py


  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Build Docker image
        run: docker build -t myweatherapp:${{ github.sha }} .

      - name: Log in to DockerHub
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker image
        if: github.ref == 'refs/heads/main' || github.event_name == 'release'
        run: |
          docker tag myweatherapp:${{ github.sha }} mydockerhubuser/myweatherapp:latest
          docker push mydockerhubuser/myweatherapp:latest


  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'release'
    steps:
      - name: Deploy to Server
        run: |
          ssh user@server 'docker pull mydockerhubuser/myweatherapp:latest && docker run -d -p 80:5000 mydockerhubuser/myweatherapp'
